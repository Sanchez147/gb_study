__author__ = 'Попцов А.В.'

# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fibonacci(n, m):
    n0 = 1
    m0 = n0
    lst = []
    lst.append(n0)
    lst.append(m0)

    # Формируем m элементов ряда Фибоначчи
    for i in range(0, m-2):
        lst.append(int(lst[i]) + int(lst[i + 1]))

    # Вырезаем из полученного ряда участок с n по m
    return lst[n-1:m+1]

print(fibonacci(4, 7))

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

import math # Подключаю только для того, чтобы воспользоватья константой "бесконечность" :)
def sort_to_max(origin_list):
    lst = []

    def f_get_min(list):
        min_n = math.inf
        for i in range(0, len(list)):
            p = list[i]
            if p < min_n:
                min_n = p
        return min_n

    # Определяем минимальное значение, и сохраняем его в итоговый список
    while len(origin_list) > 0:
        min_val = f_get_min(origin_list)
        lst.append(min_val)

        # Удаляем из исходного списка рассмотренный элемент
        origin_list.remove(min_val)
    return lst

print(sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0]))

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.


# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

# А2    А3
# А1    А4
# нулевой элемент - коорд. Х, первый элемент - коорд. Y
def f_get_par(A1, A2, A3, A4):
    x1 = int(A1[0])
    y1 = int(A1[1])
    x2 = int(A2[0])
    y2 = int(A2[1])
    x3 = int(A3[0])
    y3 = int(A3[1])
    x4 = int(A4[0])
    y4 = int(A4[1])

    pr_1 = (((y2 == y3) and (y1 == y4)) or ((x1 != x2) and (x3 != x4)))
    pr_2 = ((abs(x1 - x2) == abs(x3 - x4)) and (abs(y1 - y2) == abs(y3 - y4)))

    if pr_1 and pr_2:
        res = "Это параллелограмм!"
    else:
        res = "Это не параллелограмм!"
    return res

print(f_get_par([1, 1], [2, 4], [5, 4], [6, 1]))

